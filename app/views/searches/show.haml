%h1= @route

.flights{:data => {:controller => 'flights', :flights_flights_data_value => @flights.index_by(&:id).to_json(:include => [:fare], :methods => [:dep_at_hour, :arr_at_hour])}}

  - selectable_dates = @flights.map(&:dep_at).map(&:to_date).uniq.sort

  .mb-3.btn-group
    Departure Date
    - selectable_dates.each do |date|
      - input_id = "dep_date_#{date.to_s.underscore}"
      = check_box_tag input_id, :value => date.to_s, :checked => true, :class => 'btn-check', :data => {:flights_target => 'depDate', :action => 'flights#filterDates flights#filterFlights', :date => date.to_s}
      = label_tag input_id, date.to_s, :class => 'btn btn-outline-primary'
  .mb-3
    = label_tag :max_duration, 'Max duration in hours'
    = number_field_tag :max_duration, nil, :data => {:flights_target => 'maxDuration', :action => 'flights#filterFlights'}, :placeholder => "Avg: #{@flights.map(&:duration).sum / @flights.size / 60}h"
  .mb-3
    = label_tag :stops, 'Stops'
    = number_field_tag :stops, nil, :data => {:flights_target => 'stops', :action => 'flights#filterFlights'}
  .mb-3
    = label_tag :max_points, 'Max K-points'
    = number_field_tag :max_points, nil, :data => {:flights_target => 'maxPoints', :action => 'flights#filterFlights'}, :placeholder => "Avg: #{@flights.filter_map { |f| f.fare&.points }.sum / @flights.size / 1000}K"
  - %i[dep arr].each do |dep_arr|
    - %i[min max].each do |min_max|
      .mb-3
        = label_tag "#{min_max}_#{dep_arr}_at"
        = number_field_tag "#{min_max}_#{dep_arr}_at", nil, :data => {:flights_target => [min_max, dep_arr, 'at'].join('_').camelize(:lower), :action => 'flights#filterFlights'}

  .results
    .row
      - selectable_dates.each do |date|
        .date-col.text-center{:data => {:flights_target => 'dateCol', :date => date}}
          %strong= date
          .btn-group
            = link_to 'Refresh', [:new, :search, :route => @route, :date => date], :class => 'btn btn-outline-primary'
            = button_to 'Delete', [:searches, :route => @route, :date => date], :method => :delete, :class => 'btn btn-outline-danger', :data => {:turbo_confirm => 'Sure?'}
          - @flights.group_by { |f| f.dep_at.to_date }.fetch(date).each do |flight|
            %div[flight]{:data => {:flights_target => 'flight', :id => flight.id}, :style => "left: #{flight.offset_duration_percent}%; width: #{flight.duration_percent}%"}
              .d-flex.justify-content-between
                .dep
                  -#.name= flight.dep
                  .at= flight.dep_at_in_time_zone.strftime('%R')
                .arr
                  -#.name= flight.arr
                  .at= flight.arr_at_in_time_zone.strftime('%R')
              - color = percent_progress_bar_color(flight.duration_weight_percent)
              .duration-line{:class => "text-#{color}"}
                - dur = ActiveSupport::Duration.build(flight.duration.minutes).parts
                #{dur.fetch(:hours)}h #{dur.fetch(:minutes, 0)}m
              - if flight.fare&.points
                .price{:class => "text-#{percent_progress_bar_color(flight.points_percent)}"}
                  %span.points= "#{flight.fare.points / 1000}K"
                  - if flight.fare&.cash
                    \/
                    %span.cash= number_to_currency(flight.fare.cash / 100.to_f, :precision => 0)
